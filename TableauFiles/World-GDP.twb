<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.ParameterDefaultValues.true...ParameterDefaultValues />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='@switch parameter' datatype='boolean' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
      <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0kswr3s1eixlh01dhnph515own3a].[year]' caption='pYear' datatype='integer' default-format='*####' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
        <calculation class='tableau' formula='2021' />
      </column>
      <column caption='Selection' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDP (current US$)&quot;'>
        <calculation class='tableau' formula='&quot;GDP (current US$)&quot;' />
        <members>
          <member value='&quot;Foreign direct investment, net inflows (\% of GDP)&quot;' />
          <member value='&quot;GDP (current US$)&quot;' />
          <member value='&quot;Gross capital formation (\% of GDP)&quot;' />
          <member value='&quot;Inflation, consumer prices (annual \%)&quot;' />
          <member value='&quot;Trade (\% of GDP)&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='wdi_final' inline='true' name='federated.0kswr3s1eixlh01dhnph515own3a' version='18.1'>
      <connection class='federated' tableau-ri='true'>
        <named-connections>
          <named-connection caption='wdi_final' name='textscan.0fpvqo01uj1goq126iwsl0al80dz'>
            <connection class='textscan' directory='C:/Users/nthieu211/OneDrive - VNU-HCMUS/Semeter-6/TrucQuanHoaDuLieu/Final-Project' filename='wdi_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0fpvqo01uj1goq126iwsl0al80dz' name='wdi_final.csv' table='[wdi_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='country_code' ordinal='1' />
            <column datatype='string' name='series_name' ordinal='2' />
            <column datatype='string' name='series_code' ordinal='3' />
            <column datatype='integer' name='year' ordinal='4' />
            <column datatype='real' name='value' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Sub-region' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0fpvqo01uj1goq126iwsl0al80dz' name='wdi_final.csv' table='[wdi_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='country_code' ordinal='1' />
            <column datatype='string' name='series_name' ordinal='2' />
            <column datatype='string' name='series_code' ordinal='3' />
            <column datatype='integer' name='year' ordinal='4' />
            <column datatype='real' name='value' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Sub-region' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>series_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[series_name]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>series_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>series_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[series_code]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>series_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-region]</local-name>
            <parent-name>[wdi_final.csv]</parent-name>
            <remote-alias>Sub-region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='@list' datatype='boolean' name='[Calculation_1556275183146094592]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[series_name] = [Parameters].[Parameter 2]' />
      </column>
      <column caption='@no list' datatype='boolean' name='[Calculation_1556275183146582017]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='NOT [Parameters].[Parameter 1 1]' />
      </column>
      <column caption='cal_year' datatype='boolean' name='[Calculation_470555830025441295]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [year]&#10;or [Parameters].[Parameter 1] = 1' />
      </column>
      <column caption='@switch Calc' datatype='boolean' name='[Calculation_6473961365131266]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1 1]' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='World' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='wdi_final.csv' datatype='table' name='[__tableau_internal_object_id__].[wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F]' role='measure' type='quantitative' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Series Code' datatype='string' name='[series_code]' role='dimension' type='nominal' />
      <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[value]' derivation='Avg' name='[avg:value:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1556275183146094592]' derivation='None' name='[none:Calculation_1556275183146094592:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1556275183146582017]' derivation='None' name='[none:Calculation_1556275183146582017:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_6473961365131266]' derivation='None' name='[none:Calculation_6473961365131266:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[value]' derivation='Sum' name='[sum:value:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Region,Year)' hidden='true' name='[Action (Region,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (@list,Series Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1556275183146094592:nk]' />
          <groupfilter function='level-members' level='[none:series_name:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (@no list,@switch Calc)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1556275183146582017:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_6473961365131266:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:series_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Population ages 0-14 (\% of total population)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Foreign direct investment, net inflows (\% of GDP)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gross capital formation (\% of GDP)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trade (\% of GDP)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Population ages 15-64 (\% of total population)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Inflation, consumer prices (annual \%)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GDP (current US$)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Labor force, female (\% of total labor force)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unemployment, female (\% of female labor force) (national estimate)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unemployment, male (\% of male labor force) (national estimate)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Population ages 65 and above (\% of total population)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Labor force, total&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GDP growth (annual \%)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unemployment, total (\% of total labor force) (national estimate)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Population, total&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GDP per capita (current US$)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[avg:value:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2.2908711425911705</bucket>
            </map>
            <map to='#499894'>
              <bucket>526653790.6708138</bucket>
            </map>
            <map to='#499894'>
              <bucket>2984706243.6548223</bucket>
            </map>
            <map to='#499894'>
              <bucket>11529042672.352797</bucket>
            </map>
            <map to='#499894'>
              <bucket>17614791265.682358</bucket>
            </map>
            <map to='#499894'>
              <bucket>34326058557.441795</bucket>
            </map>
            <map to='#499894'>
              <bucket>66445256585.367149</bucket>
            </map>
            <map to='#499894'>
              <bucket>179677211793.93848</bucket>
            </map>
            <map to='#499894'>
              <bucket>398303272764.45959</bucket>
            </map>
            <map to='#499894'>
              <bucket>1272839334119.2952</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>-8.1303934744108091</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4.7628535568546075</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1691275156.6001997</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>8044498800.9592323</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>14657586937.073456</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>25602419210.337395</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>54622176470.588234</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>88927263724.859207</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>314464137241.33008</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>594104177539.52539</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4940877780755.3262</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1.5916584531792159</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5.7018249445061704</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>217800000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2496134680.3169427</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8746270636.4014187</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>15776758632.85725</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>28371238665.511635</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>63082047649.85276</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>111271112329.9749</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>366137590600.69934</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>819035182929.58508</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2.947245835121115</bucket>
            </map>
            <map to='#79706e'>
              <bucket>904181492.76670766</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3621222382.1592903</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12626717491.894146</bucket>
            </map>
            <map to='#79706e'>
              <bucket>19140461605.822723</bucket>
            </map>
            <map to='#79706e'>
              <bucket>39495431574.178162</bucket>
            </map>
            <map to='#79706e'>
              <bucket>68955083280.1922</bucket>
            </map>
            <map to='#79706e'>
              <bucket>207889333724.13791</bucket>
            </map>
            <map to='#79706e'>
              <bucket>419015018371.88727</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1778782625793.7417</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2.5116782614381736</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>554181481.48148143</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3330281523.5391531</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>11779980801.784285</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>18255787479.184605</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>36288830373.410614</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>67404287260.319939</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>181848022233.89041</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>404142766093.05292</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1427380681294.5508</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1.9904023899670544</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7.0445386835223118</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>259538700.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2516498299.0121193</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9996249658.2398205</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>16091817842.234188</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>28407867534.003548</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>63605100000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>116527101097.69968</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>372980957208.02258</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>833541236569.3147</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3.6224948014055727</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1631486531.9236374</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>5861268038.7982016</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>14013022092.064486</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>23365361635.220127</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>45744271658.914085</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>85985752107.467941</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>284087563695.79846</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>504182603275.5423</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3176295065497.2422</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>-1.3943814479422563</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>4.8636158499883546</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>63100961.538461544</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1936174043.4529345</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>8413200567.6151018</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>14786861638.453484</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>26594305745.554035</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>55350968593.059738</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>94243453937.446167</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>317058508651.76001</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>635663801201.76526</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>17734062645371.375</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3.4534434520805299</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1454458183.8598149</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>4843800000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>13861409968.834984</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>22147634727.358444</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>42817472975.367714</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>84056312734.308868</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>253663144586.01917</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>487227339102.6701</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2957879759263.5186</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2.1394363257368081</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>404028900.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2539552984.6779723</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11070356519.480392</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>17144918952.468237</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>28488668301.64011</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>64282438666.739037</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>142866329198.4202</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>394086401171.16779</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1012846760976.728</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2.954624527293749</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>956332655.71823394</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>4042237864.289423</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13366230219.535185</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>19737615114.366074</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>39853501579.821068</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>69238903106.173767</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>214873879833.64771</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>440833583992.48505</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1810955871380.9761</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3.2422103256326613</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1122807407.4074073</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4296304590.0113544</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13679221333.205196</bucket>
            </map>
            <map to='#d37295'>
              <bucket>20216843173.970173</bucket>
            </map>
            <map to='#d37295'>
              <bucket>40408208528.159904</bucket>
            </map>
            <map to='#d37295'>
              <bucket>70043191477.045364</bucket>
            </map>
            <map to='#d37295'>
              <bucket>223249497500.38657</bucket>
            </map>
            <map to='#d37295'>
              <bucket>480368403893.36438</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1988336331717.417</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3.617498639896656</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1471125925.9259255</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>5405576235.7946234</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>14006569575.680012</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>23131940280.731602</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>45338283344.81752</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>85506243833.78157</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>281777887121.4505</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>488526545878.89136</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3131377762925.9541</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3.7577005720254433</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1638517533.1650369</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>7628000011.4618416</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>14472603322.557116</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>24460196270.686577</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>46686741814.278046</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>88191977373.211975</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>297301883523.25104</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>505947037098.42358</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>4259934911821.6372</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2.8236507846349568</bucket>
            </map>
            <map to='#e15759'>
              <bucket>843842416.46244216</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3482987379.0941982</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12269392839.747194</bucket>
            </map>
            <map to='#e15759'>
              <bucket>18629365597.00174</bucket>
            </map>
            <map to='#e15759'>
              <bucket>37191166151.980026</bucket>
            </map>
            <map to='#e15759'>
              <bucket>67841049193.38546</bucket>
            </map>
            <map to='#e15759'>
              <bucket>197112255360.61234</bucket>
            </map>
            <map to='#e15759'>
              <bucket>415021590683.00616</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1552667363236.0625</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2.2023359036638031</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>469231309.5394882</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2779813489.0244703</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11208600000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>17364044943.820225</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28736940000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>65091751273.287865</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>163044443983.75885</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>396986899888.35132</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1186092991320.0376</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1.1914944844952187</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4.9026321495577827</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>133218896.93260691</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2038417462.3769529</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>8543423502.6133966</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>14915001426.972391</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>26961061119.795666</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>59319484710.652725</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>106165866000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>348262544719.17773</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>679444832854.29456</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23315080560000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3.4346088412199549</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1296089632.6003869</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>4743335152.9418135</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>13825049831.79586</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>20944392615.080269</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>40529789025.570229</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>77594279054.879547</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>249885687029.63431</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>482174854481.95575</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2107702842669.7336</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2.9374626384910063</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>860840740.74074066</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3509000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12310595843.935326</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>18827148509.579762</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>38868663031.914894</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>68205380706.660889</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>200085537744.35428</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>416264942893.32617</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1608981456325.0779</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1.4782792678114045</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5.1738509469064526</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>207031250.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2491500000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>8596096984.0331154</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>15286441818.14366</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>27625388352.168777</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>61748586534.867226</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>110347079517.3558</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>359713152725.0625</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>800640155387.26013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:value:ok]' type='palette'>
            <map to='#499894'>
              <bucket>524.666675441091</bucket>
            </map>
            <map to='#499894'>
              <bucket>1139.1902766673329</bucket>
            </map>
            <map to='#499894'>
              <bucket>2074.6139280243833</bucket>
            </map>
            <map to='#499894'>
              <bucket>3497.6814104601062</bucket>
            </map>
            <map to='#499894'>
              <bucket>4897.2658966863128</bucket>
            </map>
            <map to='#499894'>
              <bucket>7003.4698911704254</bucket>
            </map>
            <map to='#499894'>
              <bucket>9985.4919976742694</bucket>
            </map>
            <map to='#499894'>
              <bucket>12132.876884824311</bucket>
            </map>
            <map to='#499894'>
              <bucket>20260.221616921252</bucket>
            </map>
            <map to='#499894'>
              <bucket>22242.406417971975</bucket>
            </map>
            <map to='#499894'>
              <bucket>32142.080952544162</bucket>
            </map>
            <map to='#499894'>
              <bucket>44846.791595481562</bucket>
            </map>
            <map to='#499894'>
              <bucket>61398.12735444514</bucket>
            </map>
            <map to='#499894'>
              <bucket>90124.413878447696</bucket>
            </map>
            <map to='#499894'>
              <bucket>131261.20104302559</bucket>
            </map>
            <map to='#499894'>
              <bucket>207820.0478515625</bucket>
            </map>
            <map to='#499894'>
              <bucket>355242.43662684161</bucket>
            </map>
            <map to='#499894'>
              <bucket>803056.64538497</bucket>
            </map>
            <map to='#499894'>
              <bucket>1433637.3227924432</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>846.76720129222497</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1603.9934774532633</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2924.1018067716177</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4255.742993212536</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6012.0627670585545</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>9007.4191023135645</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>15143.409621839763</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>16643.806578717675</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>27676.077729217715</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>31911.035789001668</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>50822.147018566466</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>60915.424399546158</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>77980.338869471118</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>112938.99973189432</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>172555.40155039687</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>282407.50750380324</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>570413.52788610337</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1108459.3172606486</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>449.9552098424403</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>956.83136386570641</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1863.1092566437319</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3258.12133789063</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4604.5766789786448</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6680.0826703538323</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8556.8306617095968</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10129.812959763764</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>16527.511035407144</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>18566.095586371812</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>31024.26614379885</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>39918.167558344277</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>55715.314901088546</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>84912.797757326436</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>85656.322666307009</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>122062.32441792554</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>187834.60622924424</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>296385.48359473993</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>724455.72224156675</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1250888.9862805179</bucket>
            </map>
            <map to='#79706e'>
              <bucket>608.33251953125</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1322.3150360816255</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2233.3055239926907</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3893.8415151676354</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5332.1604745684672</bucket>
            </map>
            <map to='#79706e'>
              <bucket>7677.1522256999642</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11027.80049626873</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13094.459531360901</bucket>
            </map>
            <map to='#79706e'>
              <bucket>22258.061808194936</bucket>
            </map>
            <map to='#79706e'>
              <bucket>23862.710992912165</bucket>
            </map>
            <map to='#79706e'>
              <bucket>39487.355416652805</bucket>
            </map>
            <map to='#79706e'>
              <bucket>48809.226876224311</bucket>
            </map>
            <map to='#79706e'>
              <bucket>65203.119262695371</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99124.807780399977</bucket>
            </map>
            <map to='#79706e'>
              <bucket>138556.66271088234</bucket>
            </map>
            <map to='#79706e'>
              <bucket>223003.71832282399</bucket>
            </map>
            <map to='#79706e'>
              <bucket>401648.76838336053</bucket>
            </map>
            <map to='#79706e'>
              <bucket>995246.87661797903</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3160016.0538747115</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>533.38523170940039</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1182.5217004301801</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2161.3101957701601</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3586.3473017184278</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>4973.7745612681647</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>7167.9191590832716</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10142.959940274655</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>12569.171543565149</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>21026.951181209239</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>22992.87938333477</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>34734.583799383145</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>45320.208715606648</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>62663.967345307698</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>93517.167933418459</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>131422.54029965858</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>208114.96946385526</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>361182.80955166189</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>921704.16526936134</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1749072.4872115292</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>462.4042236948174</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>989.84717070054899</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1868.4665735741007</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3337.2525115750395</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4606.0645516928771</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6794.489158771662</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>8992.3432686592932</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10160.783247007061</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>16632.68811342843</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>19539.565810734588</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>31368.863073533186</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>40318.557566049261</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>59091.296825255973</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>86241.406042892806</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>117370.49690016154</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>127217.06725407155</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>191311.7673572631</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>301580.47207857046</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>782802.30629628839</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1280710.2646242389</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>822.90614397236607</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1539.1305585625637</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2877.5201732358241</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>4229.9106490450276</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>5863.2032407221559</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>8561.0709478198714</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>14126.833095594306</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>15816.989398397049</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>26883.748333940664</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>28977.565567363552</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>44526.40240725784</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>59200.177944109178</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>76919.758909701282</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>108053.10786024459</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>159441.30598613588</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>268911.32408632402</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>520275.72025148163</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1072375.4920236317</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>216.82674134137747</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>852.33367021211757</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1660.3083395989756</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3009.9241707219103</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3534.7911379360339</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>4332.3041246399471</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>6056.3439029144511</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>9121.6371379714456</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>15253.010627992393</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>16707.623006321432</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>29348.802777884954</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>37207.493860834817</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>52382.45959871565</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>63530.633483909012</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>79692.768288736654</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>113808.92849343859</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>173853.18879838695</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>286908.29692865285</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>640495.9697265625</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1135563.3204979773</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>710.25813854344403</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1490.2031369464462</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2593.3550971984691</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>4042.7512235323702</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>5645.1992896533238</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8458.1627606738984</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>13190.373212054021</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>14787.635775290097</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>24710.11378803771</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>27179.411985337076</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>42728.182084505766</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>52315.660078311572</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>75394.793684738979</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>105085.1661948222</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>156106.20408644306</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>236025.58402772533</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>498891.70251929801</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1009506.985800202</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>493.47877750197705</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1042.0966796875</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1910.4214728244897</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3372.8956006492499</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>4796.5333138992783</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6863.0743459301657</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9356.1698818049808</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10169.0869140625</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>17401.119533003399</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>19545.742817193233</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>31529.919821972693</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>41596.50550234034</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>59281.006398043872</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>86762.091489906539</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>129881.32073028672</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>157754.9543738928</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>196517.45101243287</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>335257.16910753271</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>793464.41724289954</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1316468.8586250087</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>628.69948196516168</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1372.6966743331732</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2288.1194976203251</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3894.272201969221</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>5353.348064562786</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>7733.8028692047064</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11253.734019781909</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13871.798219466396</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>23253.436480702654</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>24300.32943621001</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>41662.418405890603</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>49170.752151244087</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>68055.831577696939</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>101791.63009702753</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>145224.32413440684</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>223014.25234088238</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>413185.91652541194</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1001960.1383424785</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3911861.5496327048</bucket>
            </map>
            <map to='#d37295'>
              <bucket>643.77222128632854</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1430.5515735402594</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2354.1196143104166</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3903.3958387860534</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5567.9727270633221</bucket>
            </map>
            <map to='#d37295'>
              <bucket>8335.2564756055071</bucket>
            </map>
            <map to='#d37295'>
              <bucket>11822.631439131674</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14016.247496105052</bucket>
            </map>
            <map to='#d37295'>
              <bucket>24148.576596250867</bucket>
            </map>
            <map to='#d37295'>
              <bucket>25545.241002713636</bucket>
            </map>
            <map to='#d37295'>
              <bucket>41938.266197634955</bucket>
            </map>
            <map to='#d37295'>
              <bucket>51720.370763440114</bucket>
            </map>
            <map to='#d37295'>
              <bucket>68731.253049768813</bucket>
            </map>
            <map to='#d37295'>
              <bucket>104371.67833433935</bucket>
            </map>
            <map to='#d37295'>
              <bucket>148148.5943637208</bucket>
            </map>
            <map to='#d37295'>
              <bucket>225486.31603628679</bucket>
            </map>
            <map to='#d37295'>
              <bucket>414462.39221606037</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1003605.2913998585</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>774.68925944461387</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1519.5868229878645</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2746.4204495743866</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>4042.7693498462049</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>5741.6431291187719</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>8496.424141763744</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>14005.5159819982</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>15619.542655569498</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>26543.136575013978</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>28036.189453125</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>43376.283774736905</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>52837.903977814902</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>76550.078085668283</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>106069.09343386165</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>157052.31320167377</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>254405.20421145466</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>514528.28986283689</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1059743.0431595496</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>833.24434263632406</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1577.9117472609851</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2917.9962809563044</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>4251.1727662298808</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>5965.450231953645</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>8655.0006820680283</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>14658.686000908698</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>16120.98904952426</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>26940.822112776845</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>31721.298914185671</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>48416.941498768829</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>60729.450348679376</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>77013.376913159416</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>112460.09240582914</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>164792.29418565857</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>270704.65250154061</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>522161.89249858394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1107022.8831943043</bucket>
            </map>
            <map to='#e15759'>
              <bucket>564.82200175518904</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1237.949295350392</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2176.5794594569702</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3639.4126986958772</bucket>
            </map>
            <map to='#e15759'>
              <bucket>5266.8761600421349</bucket>
            </map>
            <map to='#e15759'>
              <bucket>7282.3584890254788</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10431.305005930641</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12808.987468372759</bucket>
            </map>
            <map to='#e15759'>
              <bucket>21047.040207252896</bucket>
            </map>
            <map to='#e15759'>
              <bucket>23501.919462816822</bucket>
            </map>
            <map to='#e15759'>
              <bucket>34818.252784040138</bucket>
            </map>
            <map to='#e15759'>
              <bucket>45517.79493018466</bucket>
            </map>
            <map to='#e15759'>
              <bucket>62783.546142578183</bucket>
            </map>
            <map to='#e15759'>
              <bucket>96002.485404766732</bucket>
            </map>
            <map to='#e15759'>
              <bucket>134537.80328888993</bucket>
            </map>
            <map to='#e15759'>
              <bucket>210498.48063350518</bucket>
            </map>
            <map to='#e15759'>
              <bucket>387930.50190125668</bucket>
            </map>
            <map to='#e15759'>
              <bucket>968348.11050422676</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1800163.8170791343</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>516.86655218269607</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1073.6593370995149</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1936.4245889110396</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3398.8014315308264</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>4864.1170468027331</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6990.9355026204148</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>9540.5840281270575</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10408.669756134919</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>17522.49267578125</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>20339.521269905224</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>32122.922776333369</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>43258.26387156015</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>60689.109936253437</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>89116.095769994005</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>131238.44312634954</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>182538.63834021069</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>197337.54492595705</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>348653.87874208821</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>802103.80326982681</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1348226.3379211193</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>416.21777471824419</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>897.19457543330907</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1749.655815322059</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3068.8125550760419</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4500.6244638983799</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4975.6641538212443</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>6327.5990115136328</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>9307.8867684143879</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>15328.805874439155</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>17658.947301119217</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>29505.301828905333</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>37629.174168795587</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>53819.567300393588</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>67329.677791096692</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>83011.600003516069</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>116204.17545425701</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>175336.85370855359</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>292749.50841013726</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>657313.32207790646</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1147439.08368485</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>704.02991603549344</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1477.4528703259366</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2446.0663056229519</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>4041.1741958765624</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>5599.9575226073348</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>8437.5667322870595</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>12986.945292619817</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14198.753959474379</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>24688.057119289315</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>26959.675436732639</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>42417.598250278272</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>52162.570115040624</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>72333.565954406164</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>105071.03652108637</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>148883.48259557257</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>228649.65236349203</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>492520.10631336732</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1007735.8048111642</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>597.52969189304781</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1283.1408297893638</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2222.4656361989014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3751.74072265625</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>5307.2152279891852</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>7568.0420109632541</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10736.549068191018</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>13047.432061759073</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>21602.192991076681</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>23595.243683644083</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>38022.412898799303</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>46772.825350754465</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>65035.182550488986</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98007.551181541217</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>134844.56168269183</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>221994.63232066922</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>392982.67119896616</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>992125.0764292957</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2385935.7515219403</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>435.46925158285597</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>918.65259407741837</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1838.4481385249096</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3224.4225513121373</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4505.867363971236</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>6304.5020818464782</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>6542.7974913055268</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>9499.5902023043182</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>15867.719130164114</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>18207.13964086309</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>30797.844655527286</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>39055.282928075401</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>54781.410171757489</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>84652.025293715487</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>85420.190855609661</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>116896.86510431788</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>185045.40427813583</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>294306.00122470799</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>694727.91128737677</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1209101.8927376943</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1556275183146094592:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_6473961365131266:nk]' palette='button' type='shape'>
            <map to='button/Group 1 (1).png'>
              <bucket>true</bucket>
            </map>
            <map to='button/Group 1 (2).png'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle East and North Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='@switch parameter' datatype='boolean' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
        </column>
        <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0kswr3s1eixlh01dhnph515own3a].[year]' caption='pYear' datatype='integer' default-format='*####' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
        </column>
        <column caption='Selection' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDP (current US$)&quot;'>
          <calculation class='tableau' formula='&quot;GDP (current US$)&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='wdi_final.csv' id='wdi_final.csv_B92C939F85E045BD9F561C24E5C13B3F'>
            <properties context=''>
              <relation connection='textscan.0fpvqo01uj1goq126iwsl0al80dz' name='wdi_final.csv' table='[wdi_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country_name' ordinal='0' />
                  <column datatype='string' name='country_code' ordinal='1' />
                  <column datatype='string' name='series_name' ordinal='2' />
                  <column datatype='string' name='series_code' ordinal='3' />
                  <column datatype='integer' name='year' ordinal='4' />
                  <column datatype='real' name='value' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Sub-region' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action3_AC05B7CC355142E2A91CFC4242BEEDCD]'>
      <source dashboard='World' type='sheet' worksheet='GDP per capita' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='GDP per capita' />
        <param name='special-fields' value='all' />
        <param name='target' value='World' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='World' type='sheet' worksheet='StackBar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='World' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='GDP Distribution by Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0kswr3s1eixlh01dhnph515own3a].[year]' caption='pYear' datatype='integer' default-format='*####' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column caption='cal_year' datatype='boolean' name='[Calculation_470555830025441295]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [year]&#10;or [Parameters].[Parameter 1] = 1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[country_name]' derivation='Attribute' name='[attr:country_name:nk]' pivot='key' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_470555830025441295]' derivation='None' name='[none:Calculation_470555830025441295:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='None' name='[none:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_470555830025441295:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' value='167' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <tooltip column='[federated.0kswr3s1eixlh01dhnph515own3a].[attr:country_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='total' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#55007f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{8A4A39D2-36BC-41C0-BB3A-B6CFE9E9D9EE}' />
    </worksheet>
    <worksheet name='GDP Growth by Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='member' level='[none:series_name:nk]' member='&quot;GDP growth (annual \%)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{C3D5C59B-1FF7-4BAD-B9B5-8E9D3A78183B}' />
    </worksheet>
    <worksheet name='GDP per capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[series_name]' derivation='Attribute' name='[attr:series_name:nk]' pivot='key' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='member' level='[none:series_name:nk]' member='&quot;GDP per capita (current US$)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]' filter-group='6' included-values='all' />
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' included-values='all' />
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kswr3s1eixlh01dhnph515own3a].[Longitude (generated)]' field-type='quantitative' max='42406389.391736336' min='-1582203.0558952987' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kswr3s1eixlh01dhnph515own3a].[Latitude (generated)]' field-type='quantitative' max='18492942.371318892' min='-4127527.0880044312' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#decee5</color>
                <color>#cbaeda</color>
                <color>#ba90ce</color>
                <color>#a975c3</color>
                <color>#995cb8</color>
                <color>#8a45ac</color>
                <color>#7b30a1</color>
                <color>#6e1d95</color>
                <color>#610d8a</color>
                <color>#55007f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' value='GDP/capita'>
              <formatted-text>
                <run>GDP/capita</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' value='Filter GDP/capita'>
              <formatted-text>
                <run>Filter GDP/capita</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' />
              <lod column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' />
              <tooltip column='[federated.0kswr3s1eixlh01dhnph515own3a].[attr:series_name:nk]' />
              <geometry column='[federated.0kswr3s1eixlh01dhnph515own3a].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[Latitude (generated)]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D5C8925E-DC19-4984-BD5C-6002AC7B4027}' />
    </worksheet>
    <worksheet name='Index'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selection' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDP (current US$)&quot;'>
              <calculation class='tableau' formula='&quot;GDP (current US$)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column caption='@list' datatype='boolean' name='[Calculation_1556275183146094592]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[series_name] = [Parameters].[Parameter 2]' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1556275183146094592]' derivation='None' name='[none:Calculation_1556275183146094592:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_1556275183146094592:nk]'>
            <groupfilter function='member' level='[none:Calculation_1556275183146094592:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:series_name:nk]' />
              <groupfilter function='member' level='[none:series_name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_1556275183146094592:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' value='128' />
            <encoding attr='space' class='0' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#55007f' />
                <format attr='mark-transparency' value='231' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]</cols>
      </table>
      <simple-id uuid='{C464CBD4-20EE-4D9B-AF5D-2C7091BF794D}' />
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[series_name]' derivation='Attribute' name='[attr:series_name:nk]' pivot='key' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='member' level='[none:series_name:nk]' member='&quot;Population, total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]' filter-group='6' included-values='all' />
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' />
              <size column='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' />
              <text column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' />
              <lod column='[federated.0kswr3s1eixlh01dhnph515own3a].[attr:series_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C449E849-B2DA-4A58-9806-953B26A5F181}' />
    </worksheet>
    <worksheet name='StackBar'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stack Bar</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[pcto:sum:value:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]' filter-group='6' included-values='all' />
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0kswr3s1eixlh01dhnph515own3a].[pcto:sum:value:qk:3]' scope='rows' value='false' />
            <format attr='height' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' value='19' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' value='36' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Medium' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[pcto:sum:value:qk:3]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{BD7161AC-6782-431D-A464-8248BF100C0C}' />
    </worksheet>
    <worksheet name='Top 5 Countries by GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0kswr3s1eixlh01dhnph515own3a].[year]' caption='pYear' datatype='integer' default-format='*####' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column caption='cal_year' datatype='boolean' name='[Calculation_470555830025441295]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [year]&#10;or [Parameters].[Parameter 1] = 1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_470555830025441295]' derivation='None' name='[none:Calculation_470555830025441295:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Avg' name='[rank:avg:value:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_470555830025441295:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='member' level='[none:series_name:nk]' member='&quot;GDP (current US$)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[rank:avg:value:qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[rank:avg:value:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' scope='rows' value='Avg. GDP (USD)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Year'>
              <formatted-text>
                <run bold='true'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{F84BA551-3CE0-47D2-B8F8-61E0C9E7BFDD}' />
    </worksheet>
    <worksheet name='Treemap GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[series_name]' derivation='Attribute' name='[attr:series_name:nk]' pivot='key' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='member' level='[none:series_name:nk]' member='&quot;GDP (current US$)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]' filter-group='6' included-values='all' />
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#decee5</color>
                <color>#cbaeda</color>
                <color>#ba90ce</color>
                <color>#a975c3</color>
                <color>#995cb8</color>
                <color>#8a45ac</color>
                <color>#7b30a1</color>
                <color>#6e1d95</color>
                <color>#610d8a</color>
                <color>#55007f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' value='GDP'>
              <formatted-text>
                <run>GDP</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' />
              <color column='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' />
              <tooltip column='[federated.0kswr3s1eixlh01dhnph515own3a].[attr:series_name:nk]' />
              <text column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FE83FCA-A54C-46BE-A116-EA066963F400}' />
    </worksheet>
    <worksheet name='World Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='wdi_final' name='federated.0kswr3s1eixlh01dhnph515own3a' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0kswr3s1eixlh01dhnph515own3a].[year]' caption='pYear' datatype='integer' default-format='*####' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kswr3s1eixlh01dhnph515own3a'>
            <column caption='cal_year' datatype='boolean' name='[Calculation_470555830025441295]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [year]&#10;or [Parameters].[Parameter 1] = 1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='World' />
              </aliases>
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_470555830025441295]' derivation='None' name='[none:Calculation_470555830025441295:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_name]' derivation='None' name='[none:series_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Series Name' datatype='string' name='[series_name]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_8B3B32A3BDEB4B64B6D4DE7A040EAAB0]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_470555830025441295:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:series_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:series_name:nk]' member='&quot;Unemployment, female (\% of female labor force) (national estimate)&quot;' />
                <groupfilter function='member' level='[none:series_name:nk]' member='&quot;Unemployment, male (\% of male labor force) (national estimate)&quot;' />
                <groupfilter function='member' level='[none:series_name:nk]' member='&quot;Unemployment, total (\% of total labor force) (national estimate)&quot;' />
                <groupfilter function='member' level='[none:series_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]' filter-group='6' included-values='all' />
          <slices>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</column>
            <column>[federated.0kswr3s1eixlh01dhnph515own3a].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]' value='177' />
            <format attr='text-format' data-class='subtotal' field='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]' value='336' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</rows>
        <cols>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{D00386A5-48B6-4BE5-8BAD-5CE942726D8C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='World'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>World GDP 1996 - 2021</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selection' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDP (current US$)&quot;'>
          <calculation class='tableau' formula='&quot;GDP (current US$)&quot;' />
          <members>
            <member value='&quot;Foreign direct investment, net inflows (\% of GDP)&quot;' />
            <member value='&quot;GDP (current US$)&quot;' />
            <member value='&quot;Gross capital formation (\% of GDP)&quot;' />
            <member value='&quot;Inflation, consumer prices (annual \%)&quot;' />
            <member value='&quot;Trade (\% of GDP)&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='40' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone fixed-size='24' h='3540' id='41' is-fixed='true' type-v2='title' w='99064' x='468' y='885'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94690' id='38' type-v2='layout-basic' w='99064' x='468' y='4425'>
              <zone h='50654' id='7' param='horz' type-v2='layout-flow' w='64782' x='34750' y='48461'>
                <zone h='50654' id='5' type-v2='layout-basic' w='64782' x='34750' y='48461'>
                  <zone h='25325' id='23' name='GDP Distribution by Region' show-title='false' w='26289' x='73243' y='48461'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25329' id='16' name='Top 5 Countries by GDP' show-title='false' w='26289' x='73243' y='73786'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50654' id='10' name='GDP per capita' show-title='false' w='38493' x='34750' y='48461'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='21488' id='3' name='StackBar' show-title='false' w='99064' x='468' y='4425'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22548' id='18' name='GDP Growth by Region' show-title='false' w='68934' x='21100' y='25913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22548' id='9' name='StackBar' pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' type-v2='color' w='9498' x='90034' y='25913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21635' id='26' name='Index' show-title='false' w='34282' x='468' y='77480'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4891' id='27' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='34282' x='468' y='72589'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22548' id='15' name='Population' show-title='false' w='20632' x='468' y='25913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4717' id='13' name='GDP per capita' pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' type-v2='color' w='34282' x='468' y='48461'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19411' id='14' name='Treemap GDP' show-title='false' w='34282' x='468' y='53178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>World GDP 1996 - 2021</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='46' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
                <zone fixed-size='24' h='3540' id='41' type-v2='title' w='99064' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='164' h='21488' id='3' is-fixed='true' name='StackBar' show-title='false' w='99064' x='468' y='4425'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22548' id='9' name='StackBar' pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' type-v2='color' w='9498' x='90034' y='25913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='173' h='22548' id='15' is-fixed='true' name='Population' show-title='false' w='20632' x='468' y='25913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='173' h='22548' id='18' is-fixed='true' name='GDP Growth by Region' show-title='false' w='68934' x='21100' y='25913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50654' id='10' is-fixed='true' name='GDP per capita' show-title='false' w='38493' x='34750' y='48461'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4717' id='13' name='GDP per capita' pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' type-v2='color' w='34282' x='468' y='48461'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='194' h='25325' id='23' is-fixed='true' name='GDP Distribution by Region' show-title='false' w='26289' x='73243' y='48461'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='148' h='19411' id='14' is-fixed='true' name='Treemap GDP' show-title='false' w='34282' x='468' y='53178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4891' id='27' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='34282' x='468' y='72589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='195' h='25329' id='16' is-fixed='true' name='Top 5 Countries by GDP' show-title='false' w='26289' x='73243' y='73786'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='165' h='21635' id='26' is-fixed='true' name='Index' show-title='false' w='34282' x='468' y='77480'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19F93E5F-BA2C-4547-95C5-69DAE3BB3B7A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='StackBar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[:Measure Names]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A701010A-B8A5-4B2A-97E8-12848425F789}' />
    </window>
    <window class='worksheet' name='Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_1556275183146094592:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53F48006-803E-4FB5-81C5-B9C8AB6C7E88}' />
    </window>
    <window class='worksheet' name='GDP per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_code:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D552D634-71A8-4884-84FC-7887DAEC4D76}' />
    </window>
    <window class='worksheet' name='Treemap GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DE57B11-39B4-45D2-9C3A-F022ECEB002F}' />
    </window>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D63C66B9-D4AD-484D-8D76-DB9685DBF7F5}' />
    </window>
    <window class='worksheet' name='World Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[attr:value:ok]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F2B317B-F2EC-4ABF-88B0-C553A656320E}' />
    </window>
    <window class='worksheet' name='Top 5 Countries by GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]' type='filter' />
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[Series Name (group)]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[Year (group)]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:qk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555829695156238:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:value:qk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4740D322-590C-4B8C-AC19-B3C497703D1B}' />
    </window>
    <window class='worksheet' name='GDP Growth by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[Series Name (group)]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[Year (group)]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[avg:value:ok]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555829677256705:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830033416209:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830034108434:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:series_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:qk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22B68796-BFB4-4294-9AAB-E08F2A3EF7D2}' />
    </window>
    <window class='worksheet' name='GDP Distribution by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Calculation_470555830025441295:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:Region:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:country_name:nk]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[none:year:ok]</field>
            <field>[federated.0kswr3s1eixlh01dhnph515own3a].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1882898-3E66-4AD4-86E9-034FF1CFB415}' />
    </window>
    <window class='dashboard' maximized='true' name='World'>
      <viewpoints>
        <viewpoint name='GDP Distribution by Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP Growth by Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GDP per capita'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Index'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population' />
        <viewpoint name='StackBar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Countries by GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Treemap GDP' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{4C0058C3-88EE-4974-BB2A-A2FE41F894AC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='GDP Distribution by Region' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='GDP Growth by Region' width='240'>
      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
      /wXcKAGnAocsZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='GDP per capita' width='240'>
      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
      qGc24DC9ryAIqNVqMpmMXPH1pgY5L9yA68RpdVitFnZ2dlCr1Hz36B6laolwbJ/BoUEEBPL5
      3Ln3ojMzMyiVSgqFAtevX8dsNmM0GnG3uFEqlSwuLcpBNEEQ8G546evvO7U18ccEQRDo7+9n
      bm4OpUqJyWhCqVSi0+kIR8IsLi6STCbJZKU2y46ODubn59HqtGg1WjkoJQgC/oCfzq5n8jDr
      XhxNDlKpFFqdlunpadra2jAYDOh0OjmfnclkSKVS6LQ6bt++zezsLLOPZ0kkEnR0dGA2mVGr
      1PT19lEqShPK2vqaHISsj0lBEPD7/eTzeSwWyYt78OABhUIBtVp9IfIuR52vUCjQarWo1Wqq
      1eqZFxhRFMnn88dSJl80LtyAn4dGo0Fv0LG6ukYineAnH/yE9vZ29Do9++F9dDrtuUP2yWSS
      3t5e8vk8bW1tDW6YTqejtbUVr9crC4tXq1WZtO1F8ENVv6urWrjdbrZ3tqUqKKUKl9Ml/U5t
      reh0OkwmE0ajEZvdRjabZXd3l2KxyMbGBmq1msePH3Nl8gpqtZqNzQ1y2RyBQICOjg58Ph8t
      LS3YbDb0ej1ffvElu3u7fP3V1+gNenb3diU1xSYHxWIRj8dDOpWm2dUsqzrodDqcTuezld7G
      7u4um5tb8Gw75nA4sFqtcoOL2+3G5/OxsLCA0+m8NJmXepPDebzD+jmiKL7Uql2nPD7te11q
      HvggwuEwvh0f+/thlCol5VIZs8XExMTEua+1s7PDysoKH3zwwbEFA6IosrS0RDKZ5Kc//elL
      FRZsbW3J/cI/VJTLZZ7OPaXV04pWq2V1bZXJq5MnprQymQz7oX1Zi0kQBPL5PJ//4XMGBgdY
      W11jYWGB//S//Se5UCeXy6FWq2UXtVAokEgkcDqdeL1ejEYjW5tbUg230yVfFyS2y/GJCZRK
      JbVajWg0SjQW5eYzYvs6FVKdCmhxcZGrV68y8eyc1znJlstl1Go15XJZ5jx/meep1Wpyd9xJ
      eGUj0uVysbq6SiqdZHx8nEKhgNPpfKG8qNPpJBqNnvjlBEGgu7ububk5stnsCxlwPfhzsG/5
      h4pMJsPQ8BBrq2tk0hmisShTqilqtVpDQX+9rbKuV9XT2yMfA5KBRiIRxsbHcDgdCApJ0tXj
      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
      n3nX+Q+Acf6MBauw3QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Index' width='240'>
      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
      gg==
    </thumbnail>
    <thumbnail height='240' name='Population' width='240'>
      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
      LGP+H7wSoLO1Yzi+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='StackBar' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWWwk2ZWe/3sjIiP3nVuRLLL2rq2rW91VrW6ppdE2Go2lGUsjjwGPIMsG
      bL2MMIANGDZgGxobfvCDbQEC/GDAsDEDjSGNF8CwFnvGGlmSWxq51eoq7rWRLO5bJplJ5hYR
      9/ohSWZEZlblzSKrq6LrfC+FiLonzskT98+M9SeTUkoQBOFL+NMugCCIx4cETBA+xiNgIcTT
      qoMgiMeABEwQPoYOoQnCx5CACcLHkIAJwseQgAnCx5CACcLHkIAJwseQgAnCx5CACcLHkIAJ
      wsfo7gUpJSzLAmcOZG1ZaQPMyEAg3FhmDMxegxTVzrEsAGn0w/1CFEcZ0tpUyx0YgJCNj8A5
      h6zOq8VqMUgtdZibMQbm5CGdolq8OeJ5co0zG7K2ohZ7lJ5xE1Lva+pZCdLaUsvd0jMGWX2g
      FqvFIbXkY/aMgZknm3pmQdZW1XKbJyGE6zN3NUfTEIg0lhkDs9chRaVz7JHnaD+ENBqxnO/3
      u/NLgO3n6DakUzgc4xEwYwy6rsMuLWHv/r9RKjDY/3mY2Y8fLkspsDf3LTiVhY6x3BxA9Ow/
      BGONA4Hq1s9QWflTpdyRU38AI3K2kVtYKNz/BlSaYySvIzz0Zc+60uoPYG3/Qil3/NK/hmY0
      doy99wB7s99Qig0OfBFm5qONuqXA7twfQVQ6T0geHET0zD/w9mzzHVRW/6tS7sjpvwcjfKqR
      26mioLivjdQHER78Pc+60sp3Ye38snMw44hf/Ffenu3OYm/um0q54xf/JTSj8aXnlFfU52jf
      b8Ps+eThspQCe/PfglPu/MXFzT5Ez/4jMNaQSi33lygvf1spd2T0azCi5xu5hY3C7DcA2fmx
      ZSPxCsLDX/GsK639T1j5nx8u63goqq8Jt46TEIrx7cbJI+Wub1MltF3sUXMrxrbLLVV7dtS6
      jxB7lJ7Jh407am6l4C7q6ZxXqsY+rJaj7Oum3HQOTBA+hgRMED6GBEwQPoYETBA+hgRMED6G
      BEwQPoYETBA+hgRMED6GBEwQPoYETBA+hgRMED6GBEwQPoYETBA+hgRMED6GBEwQPoYETBA+
      hgRMED6GBEwQPoYETBA+pq0rJYTwuPA9isOYfRiTgJRK8VJKOI4D6TL4koqxACCENzdnXdQN
      Cdu2PY5/XeV2BITTyC2P2jNALV5KOI4NKZlne8q5hfDmhnrdOFLPJIRo6plUz+0IAemq+2hz
      tL7/leYojjhHpWgzR+tb7lw3WvrdrK32rpQWrw9WgDEGw+U0KKUAGFOKZ4xB0zQwph2uE4qx
      QN0SVXfnFpZ63ah/Vje1bnJrHBp3OSzWjtiz/fUKwdA03eNK2U3PGOfenjmOciyO1DMGzpt6
      VlXvmcY5mN6Ideyj9ZtBcY7iiHOU8TZztL7lznWjY7/pEJogfAwJmCB8DAmYIHwMCZggfAwJ
      mCB8DAmYIHwMCZggfAwJmCB8DAmYIHwMCZggfAwJmCB8DAmYIHwMCZggfAwJmCB8DAmYIHwM
      CZggfAwJmCB8DAmYIHwMCZggfIzevOLAMEvZ6KzZ4Kvr+LpxWLsalGKbxkpXDR3D24x7/Nzq
      RmcteR6n54/dM2+dspvYh4xViT+wcfLm7sKMrx7sydlN7OP3W7aZo93s6/ZjuzHke9Q6j4DF
      vmMhd5wuXPckqtXq4XjO1Z0KpZSoWRaEcLkcduE26AgHVqXS+DAaIIWEmuOft+56bvUdY9s2
      bOEcLnNHvW4hxNPrmePtmcbV93XbnqnWDVHvmWMfruumZ7Ztw7EadXczR+UR+21ZNTj7ppTd
      zhPHES1zVEip9COj0m+PgDnnCAQCsEsaOFc7uuacwwwGXUkFaowpxTPGEAgYHse/6h5Xzq1p
      GsxQqJFbWOCcQc3xjyHoqhsASlytbgDQDR0GDxwu2+K97FnA40pZ3e2iZ7ru7ZlTUY5t2zPF
      ugEOXddhBFyulI56zwxdR0Bv1O2U9SP121LuN4cRCCBwnHOUMYCp7etO/aZzYILwMSRggvAx
      JGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILw
      MSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMS2ulEKIVqfJRyClrMc01hyuV42XUrSs
      U4uFN7eU+15h6uZy3g12WXfT5+7GqdCbWxxuUyH0SD1Dy/7qzpWypWeq8Uy29KxbV0pPbJeu
      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
      baq75WWGg/9ULbB5rPvb4nHij5S7y/h2455K3U+5Z0fJe5TcTyv2afe7m/hO/aZzYILwMSRg
      gvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEk
      YILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMR5PLCklLMuClOLQN6gTBzEHMACQ
      UIqXUsKxbY/Bl5RSObeQwptbqNcNKWHbttcfqYvcjuN4zPNEF7lbeiYlJNRyS7mf23E821Pu
      mXj8nkm09kw5N2P1ul1jZRe5hRAeR8sj9bu+Vi3+oN8uJ0gp1PsthWztd70ohbrR2m94teUR
      MGMMuq6jxtRd9w7cBhsFC4CpmXYxxqDpOpjL8a+m6BYI1F0SPbktS91sbP+zNq/rxm2QuXN3
      4QzZrmcMqu6O+7kft2fc2zMhhHrdaO2ZqrsjsF+3K1500TPOObirbuuI/YZiv3HQb5ebptWF
      eynjTbltu/4ForivW/oNMrUjiPcNJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC
      8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRggvAxJGCC8DEkYILwMSRg
      gvAxJGCC8DHkSkmulORK+chgcqV8ZCy5UpIrpQrkSnlYDrlSEsT7Bb3zEIIgnhm4BriOBkjA
      BPFewjlin/640jmw1tffsi5yYwihM41zahIw8fzBGKIfugynONBxKA/HAe4909SSSQTOn1dK
      xcNh7wppA8v/DpCifYAb40MArnhWOYu/gH3/R4fLJGDiqcE4B5ovJD50sPeiD49GEbpxXSnU
      GDzRtEZCrv8A2LrfMVbGTwDyYwBrHLZqkQJCQ/eUcnOzojTucSEBE0eCx+PQeno6jmOct4hQ
      z4SQ/NxppTzM0LwrRA669d/UanQMAOe8K6UEoHIrqHWMLOchNqaVcqO2pzbuMSEBE0cidIYj
      EFe4mcH4wQ3YQ2RpA87d76oleumLgB5wBUvALiuFSsdWy+FDnoiAeTAEFg51HMdCwSeR/rHh
      pqlUNwCl+3jvFcwwlOtmmldszNCR/GuvK8Vq2ZMt65zNaTgP/q9CYg68/lUAWsehhDptBcwM
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Top 5 Countries by GDP' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARMElEQVR4nO3dfXAc9X3H8c/u3t7pTifd6fnJsizbki0bY8myhMFPWGAM2BRDCm0KNGSa
      ljBJCQOTpC3pTKeEyTQMmbRlysC0nUxD/+CPBMbGQCjGFraxseUnycgWlixhyXo6Pet0uod9
      6B92LAtZwqvc7eUHn9df0p6k/c7Ib+/eafd3kmmaJohIOJIkSXKyhyCi+WPARAJjwEQCY8BE
      AhMuYE3Tkj0C0R8N4QI2DCPZIxD90RAuYCKawoCJBMaAiQTGgIkExoCJBMaAiQTGgIkExoCJ
      BMaAiQTGgIkExoCJBMaAiQTGgIkExoCJBOZI9gDxMNw3jJHAiK37lCRgQdkCOJyqrfslutZX
      IuBT+07i4Jsf2bpPxeHA9375ffhy/Lbul+haX4mAdU1DdDJq6z4Vhw6uyEvJxufARAJjwEQC
      Y8BEAmPARAJjwEQCY8BEAmPARAJjwEQCY8BEAmPARAJjwEQCs+9aaNOErmswoEB1TP2/Yega
      YpoBp9OBaCQK45rri1VnChyKZNuIRKKxKWATw90t+HDfQXjK78Q9tYuuPtJy/H0cPDOBhx6+
      B+dPH0VPbx86A5NYUroAK2tvR3GG054RiQRkT8B6BONaGrZsqcHJS1Obg73N6NEKsDSvH3B6
      UbO+DhODHfikeQR1GyttGY1IZPYErKRgYUkRxrsHp7bpIRw/04c169eiaV//nN+uadrVW/cM
      w0AkEpn2uK7pcR/5RkSj0RmzENkpafcDtzd8iO6QB67GU2jv7ITa8jmqV5Vc92tleeo5s2ma
      cDqnn1YrDiWhs87G6XTC5XIlZd9EQBIDzlt+KzYvCMNEBIH2XuTk+Gd9SfzagIloii0B6+Ex
      HDlYj57BUYxHFLw5HsDOurXw+CQAEQwsGkButg8KANmRAr/Pa8dYRMKzJWAlJR3r77xvlkdd
      WL2u9upnbl8+1txsx1RE4uO5KZHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAY
      MJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCR
      wBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAYMJHAGDCRwBgwkcAY
      MJHAHPbsxoQWCeFC8ylMpJWjamkOoEdx4expfNp2CU5fIdZVleHM8cPoHZpAJGbA7XajcuM2
      lGa57BmRSED2BKxH0HKmCcPjI5iMTQDIAULDGHHkYtuOavR/ehhNXePYUHcvJgY78EnzCOo2
      VtoyGpHI7AlYScHK6nUY727E0a4r29LysGY5YJoaRkMR+Ao8s357NBq9+rGu64hEItMe1zU9
      EVN/qWg0OmMWIjvZdAp9fXpoEPv3HUT6khpUL8ye9eskSYJpmgAAWZbhck0/rVYcSkLnnI3T
      6ZwxC5GdkhewHsT+/Q1Ysf4u5PtSIEmzf6mqqlc/vvZoTPR1Z0vARjSEc81n0NfTgY4hNw67
      YliVFsDnQQPus6fQAaBgyU1YlJtmxzhEXxm2BCwpKvKLSpCRV4zlAKC6keItwL2bxnHlzBip
      3sunom5/EW6pzrdjLCLh2RZwZk7ejO35+d4Z22RFRapHnbGdiGbihRxEAmPARAJjwEQCY8BE
      AmPARAJjwEQCY8BEAmPARAJjwEQCY8BEAmPARAJjwEQCY8BEAmPARAJjwEQCY8BEAmPARAJj
      wEQCY8BEAmPARAJjwEQCY8BEAmPARAJjwEQCY8BEAmPARAJjwEQCY8BEAmPARAJjwEQCY8BE
      AmPARAJjwEQCY8BEAmPARAJz2LYn08DYYC9Cih/5GR4AQGikF20X+5FZWIpCv4q21laMT8YA
      AJIsY8GSlcj22jcikWjsOQIbMXx+9gT21+/D6fP9AAAzOoz6AyfgcLnQfOwQukej8KalwyVN
      orWjH750H5wOyZbxiERl0+FNgq+wHJv9TjR0Xd4y3tkMT9k6LF+WiWw5hPbAGGqXL0RaioHe
      8RGUli6a9afpuj7tc9M0Ezb5XHTDmDELkZ3sCVh2wO9Px3hoatNkUENGvgcSgFSvC9EhY9Zv
      j8ViVyM1DAOSNP3InKyATcOAYcw+N1GiJe0JptMFBCdiMJGCSDgGZY6zZVVVr34cjUanfQ4A
      spyc1+IcDseMWYjsZMu/fNM0oWkxaLoOQ9cR03T4S8rR23QUY8FxNJ/vQm5Wph2jEH2l2HIE
      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
    </thumbnail>
    <thumbnail height='240' name='Treemap GDP' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXrElEQVR4nO3d6W9c56Hf8e+ZObOSM8N9uIniql3Wbju2bNm5tpMYuU2D3gIXvQhQFLh/
      QV+0/0Hf9F1Q3HvRon3RpClwb5I6MZLYlh3LspbIkkVRFCVxF/d1uAxnX05fULGjmLIUieTo
      oX8fQAtnO88Q+M5z5pwzZyzHcRxExEiuUg9ARJ6cAhYxmAIWMZgCFjGYvdGFH/2Pz+n7ZHSb
      hyI70Wv//hgejxe0rXRDLrdFVUuY1bnkE91/w4BvnRvl/E96nmpgIgCdzzdTVl4G6ndDLreF
      r9xLbDz+ZPff5PGIyDZSwCIGU8AiBntkwJbfy75XGgA48MruB67zV4eIVNrUdlQ85N4eOk/W
      AtDyUhunf3SYI6/XU9YQJhCwHrilXRmislKvJztdLr3EJ1d/y0dXzrKQSJV6OM+gNL237gDQ
      M3D9gWsK6RjTq0kW5mYo3L9sw41Yf8pyu6hsLAOgqjFE/dFddB2KkF9LcPdWkhA+XvuPp+j+
      WTfzSQ9t+yoYuziIp6WRhvpyXKkYg1eh5Vgtd/+5m/m5PK/95zOULc5y4ewUh07vIrOwzFpN
      C8cak7z30wE6XmnFnUly52acwy81MHntHkO9K5v7e5KSuDv4OfsPvEFt0EMus8LFa+dxAnUc
      qg5we2GRXdU1XB8dxV3MUO6zqaw9TLW9Qt/4PVrbnycx38tyIk1Nw36sXIJ9rR0M3BtjT2tX
      qZ/aJikQiy0BsLi8wNp8H+f6p7A9fl7b08Dymo9P3v8/7D3+JvvqAn/5KnR5tZebP+8jkbMJ
      VZVhZ5MMXRnnxrk5jrzeglOApsNRqqscLvzsNsnc+v0u/a8btLy+jzN/28bo9Wm6f9NPLufG
      wqHr5WbGbs3R914f/q4mav1uIo2VRGr8OE6ebKrw9YMSY+RyDj5Xlg9+/xPe+/QdJhN55qdG
      ia3NUFZ7kMZAgWjLC0RDbo4/9zq5+AKZXAarmKZvZJC85eWV46+RSC6RScwzNdEH4cZSP60t
      k08v0XXw21SV2eRTS6wUAxzpOsFLR49xrffyowMupnPYlRGOfH8vFNZwnPVden+6V6DoC7D3
      eCWxxRTp5QRTA0v46yp57rttBDzrt2l7eRf5lSRuv00mkafr5d00Ha2luJqiaFnklpPs+lYn
      xdUEebvAdP88iZU0a8sFWk/UbdGvR7Zbc0Mjl3su4QtWUlfbSrnXy+6WTnyWl6pwBAuw/vi3
      tf7v1MIkkVAlOEWwLKz71x3u2MPZvhHaK4IlflabKYDbPc/F6+fIsf68LOvBTF3uJDcH+qmp
      qsPa6NNIP/7RLx7YD+z22gTKPSSXU+B24eSKuDyu9X3zxSKWx8bntUilipSFvaRX0zi2G7/P
      TSaZI58rYvs9+Mts0itp8kUIRnxk1rL4Q17y6TyZZJ5gZYDMagq7zI/bKZBKFQiGfWTiafI5
      7Ug00X/48dsP7gd2HNKZBNkilAeCpNNrOJaXgMeN4/LgdvLkcGEV87jdHgqFAo6TI5Mv4PX4
      ceFgu21yxQKx+X7GVi1O7tmP9bWjeHa53Ba7jtQyP/LlW8RCIctaMkkwGMZNAcfyUCzmsF0W
      eceFy8mRzOYp8/se/R4YoJDNsxbLr/9QLK5flit+eYNMnmRm/b9rsfsbJvJ5Eun8FzfJp3Os
      pXNf/JxcSgOQiKX/5LL1+xZWv7wsEdOGjh3FsvD7y/Hf/zEYCP/Z9TYeAJcXANu2ARuP58Gb
      edxuQuEmjtWFjY33YdxuL5GQ9/5P67Ov27X+C1j/20fI9gGPsRFL5NlkEQxGSj2IktN+GxGD
      KWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylg
      EYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGD
      KWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylg
      EYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGD
      KWARgylgEYMpYBGDKWARgylgEYPZpR6A7Gy+Mg/tz9eD45R6KFvEAhzy2cKT3dtlUdFQhq/c
      80T3V8CypfLZAulEutTD2DoWVDaGSCynnvABHFYW4k+8eK1CixhMAYsYTAGLGEwBixhMAcu2
      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
    </thumbnail>
    <thumbnail height='192' name='World' width='192'>
      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
      Ve//ACX9nz581lkjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='World Table' width='240'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
